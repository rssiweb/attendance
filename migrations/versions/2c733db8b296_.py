"""empty message

Revision ID: 2c733db8b296
Revises: bf30825c1e23
Create Date: 2018-09-16 03:32:28.507844

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '2c733db8b296'
down_revision = 'bf30825c1e23'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('distribution', sa.Column('approved_by_id', sa.Integer(), nullable=False))
    op.add_column('distribution', sa.Column('branch_id', sa.Integer(), nullable=False))
    op.add_column('distribution', sa.Column('comments', sa.String(length=100), nullable=True))
    op.add_column('distribution', sa.Column('distribution_item_id', sa.Integer(), nullable=False))
    op.add_column('distribution', sa.Column('distribution_type_id', sa.Integer(), nullable=False))
    op.add_column('distribution', sa.Column('is_return_entry', sa.Boolean(), nullable=False))
    op.add_column('distribution', sa.Column('recorded_by_id', sa.Integer(), nullable=False))
    op.add_column('distribution', sa.Column('student_id', sa.Integer(), nullable=False))
    op.drop_constraint(u'distribution_ibfk_2', 'distribution', type_='foreignkey')
    op.drop_constraint(u'distribution_ibfk_1', 'distribution', type_='foreignkey')
    op.drop_constraint(u'distribution_ibfk_3', 'distribution', type_='foreignkey')
    op.create_foreign_key(None, 'distribution', 'distribution_item', ['distribution_item_id'], ['id'])
    op.create_foreign_key(None, 'distribution', 'distribution_type', ['distribution_type_id'], ['id'])
    op.create_foreign_key(None, 'distribution', 'faculty', ['recorded_by_id'], ['id'])
    op.create_foreign_key(None, 'distribution', 'student', ['student_id'], ['id'])
    op.create_foreign_key(None, 'distribution', 'branch', ['branch_id'], ['id'])
    op.create_foreign_key(None, 'distribution', 'faculty', ['approved_by_id'], ['id'])
    op.drop_column('distribution', 'distribution_item')
    op.drop_column('distribution', 'branch')
    op.drop_column('distribution', 'student')
    op.add_column('distribution_item', sa.Column('comments', sa.String(length=500), nullable=True))
    op.add_column('distribution_item', sa.Column('item_type_id', sa.Integer(), nullable=False))
    op.add_column('distribution_item', sa.Column('price', sa.Float(), nullable=False))
    op.add_column('distribution_item', sa.Column('quantity', sa.Integer(), nullable=False))
    op.alter_column('distribution_item', 'name',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
    op.create_unique_constraint(None, 'distribution_item', ['name'])
    op.create_foreign_key(None, 'distribution_item', 'distribution_item_type', ['item_type_id'], ['id'])
    op.alter_column('faculty', 'admin',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('faculty', 'isActive',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('faculty', 'superUser',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('student', 'isActive',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('student', 'superUser',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('student', 'superUser',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('student', 'isActive',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('faculty', 'superUser',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('faculty', 'isActive',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('faculty', 'admin',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.drop_constraint(None, 'distribution_item', type_='foreignkey')
    op.drop_constraint(None, 'distribution_item', type_='unique')
    op.alter_column('distribution_item', 'name',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
    op.drop_column('distribution_item', 'quantity')
    op.drop_column('distribution_item', 'price')
    op.drop_column('distribution_item', 'item_type_id')
    op.drop_column('distribution_item', 'comments')
    op.add_column('distribution', sa.Column('student', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
    op.add_column('distribution', sa.Column('branch', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
    op.add_column('distribution', sa.Column('distribution_item', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'distribution', type_='foreignkey')
    op.drop_constraint(None, 'distribution', type_='foreignkey')
    op.drop_constraint(None, 'distribution', type_='foreignkey')
    op.drop_constraint(None, 'distribution', type_='foreignkey')
    op.drop_constraint(None, 'distribution', type_='foreignkey')
    op.drop_constraint(None, 'distribution', type_='foreignkey')
    op.create_foreign_key(u'distribution_ibfk_3', 'distribution', 'distribution_item', ['distribution_item'], ['id'])
    op.create_foreign_key(u'distribution_ibfk_1', 'distribution', 'branch', ['branch'], ['id'])
    op.create_foreign_key(u'distribution_ibfk_2', 'distribution', 'student', ['student'], ['id'])
    op.drop_column('distribution', 'student_id')
    op.drop_column('distribution', 'recorded_by_id')
    op.drop_column('distribution', 'is_return_entry')
    op.drop_column('distribution', 'distribution_type_id')
    op.drop_column('distribution', 'distribution_item_id')
    op.drop_column('distribution', 'comments')
    op.drop_column('distribution', 'branch_id')
    op.drop_column('distribution', 'approved_by_id')
    # ### end Alembic commands ###
